# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from constants import *

class TestProductsOrderByPrice():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_productsOrderByPrice(self):
    self.driver.get(BASE_URL)
    self.driver.set_window_size(1552, 832)
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, STANDARD_USER)))
    self.driver.find_element(By.CSS_SELECTOR, STANDARD_USER).send_keys(STANDARD_USER_KEYS)
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, PASSWORD)))
    self.driver.find_element(By.CSS_SELECTOR, PASSWORD).send_keys(PASSWORD_KEYS)
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, LOGIN_BUTTON)))
    self.driver.find_element(By.CSS_SELECTOR, LOGIN_BUTTON).click()
    
    self.driver.find_element(By.XPATH,PRODUCT_ORDER_BY_PRICE).click() 
    products = self.driver.find_elements(By.CSS_SELECTOR, INVENTORY_NAME_ITEM) 

    lastPrice = 0
    test = True
    for i in range(len(products)):
      product = products[i].find_element(By.CLASS_NAME,INVENTORY_PRICE).text
      actualPrice = float(product.split('$')[1])
      if actualPrice< lastPrice:
        test=False
      lastPrice = actualPrice
    
    assert test == True


  
