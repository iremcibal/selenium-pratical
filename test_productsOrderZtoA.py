# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import openpyxl
from constants import *

class TestProductsOrderZtoA():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def readItemsFromExcel(self):
    excelFile = openpyxl.load_workbook("data/productName.xlsx")
    sheet = excelFile["Sayfa1"]

    totalRows = sheet.max_row
    products=[]

    for i in range(totalRows,1,-1):
      product_name = sheet.cell(i,1)
      products.append(product_name)
    
    return products

  def test_productsOrderZtoA(self):
    self.driver.get(BASE_URL)
    self.driver.maximize_window()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, STANDARD_USER)))
    self.driver.find_element(By.CSS_SELECTOR, STANDARD_USER).send_keys(STANDARD_USER_KEYS)
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, PASSWORD)))
    self.driver.find_element(By.CSS_SELECTOR, PASSWORD).send_keys(PASSWORD_KEYS)
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, LOGIN_BUTTON)))
    self.driver.find_element(By.CSS_SELECTOR, LOGIN_BUTTON).click()

    self.driver.find_element(By.XPATH,PRODUCT_SORT_Z_TO_A).click()

    products = self.driver.find_elements(By.CLASS_NAME, INVENTORY_ITEM_NAME) 
    productsFromExcel = self.readItemsFromExcel()
    isAllProductSame = len(products) == len(productsFromExcel)

    if isAllProductSame == False:
      assert False
    for i in range(len(products)):
      if products[i].text != productsFromExcel[i].value:
        isAllProductSame = False
    assert isAllProductSame == True


  
